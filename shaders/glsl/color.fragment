// __multiversion__
// This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.

#include "fragmentVersionSimple.h"

varying vec4 color;

//sky fragment shader
void main()
{
    /*
	vec3 colorCorrectionContrast = vec3(1.5, 1.25, 1.0);
	vec3 colorCorrectionTint = vec3(1.75,1.5,1.0);
	float colorCorrectionSaturation = 0.75;
	float grayScaleDiffuse = (color.r + color.g + color.b)*0.3333333;
	color.rgb = color.rgb;//avoid super bright areas (atan(x) can't be grater then 1.0)
	//color.rgb = mix(vec3(grayScaleDiffuse * 1.2), color.rgb * 1.2, colorCorrectionSaturation);
*/

	vec4 diffuse = color;

	//experimental color correction
	vec3 tint = vec3(1.5, 1.25, 1.0);
	diffuse.rgb *= tint;

	float contrast = 2.0;
	diffuse.rgb = pow(diffuse.rgb, vec3(contrast));

	//tone compensation
	diffuse.rgb = diffuse.rgb/(diffuse.rgb + vec3(1.0));
	//gamma correction
	float gamma = 1.0;
	diffuse.rgb = pow(diffuse.rgb, vec3(1.0 / gamma));

	float saturation = 0.75;
	float grayScale = (diffuse.r + diffuse.g + diffuse.b) / 3.0;
	diffuse.rgb = mix(vec3(grayScale), diffuse.rgb, saturation);



	gl_FragColor = diffuse;
	//gl_FragColor.rgb = vec3(1.0, 0.0, 0.0);
}
